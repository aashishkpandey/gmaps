# raipur	Chhattisgarh	https://www.commonfloor.com/raipur-city
# goa	goa	https://www.commonfloor.com/goa-city
# ahmedabad	Gujarat	https://www.commonfloor.com/ahmedabad-city
# shimla	Himachal Pradesh	https://www.commonfloor.com/shimla-city
# jammu	Jammu and Kashmir	https://www.commonfloor.com/jammu-city
# ranchi	Jharkhand	https://www.commonfloor.com/ranchi-city
# trivandrum	Kerala	https://www.commonfloor.com/trivandrum-city
# bhopal	Madhya Pradesh	https://www.commonfloor.com/bhopal-city
# Bhubaneswar	Odisha	https://www.commonfloor.com/Bhubaneswar-city
# Dehradun	Uttarakhand	https://www.commonfloor.com/Dehradun-city
# Visakhapatnam	Andhra Pradesh	https://www.commonfloor.com/Visakhapatnam-city
# surat	Gujarat	https://www.commonfloor.com/surat-city
# rajkot	Gujarat	https://www.commonfloor.com/rajkot-city
# nashik	Maharashtra	https://www.commonfloor.com/nashik-city
# nagpur	Maharashtra	https://www.commonfloor.com/nagpur-city
# Coimbatore	Tamil Nadu	https://www.commonfloor.com/Coimbatore-city
# mysore	karnataka	https://www.commonfloor.com/mysore-city
# Kochi	Kerala	https://www.commonfloor.com/Kochi-city
# Jamshedpur	Jharkhand	https://www.commonfloor.com/Jamshedpur-city
cities = read.csv('D:\\maps_shiny\\cities.csv', header=T, stringsAsFactors = F)
# colnames(cities) = c('city','state','link')
country = 'India'
p1 = '\\[\\[\\"0.*?\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+],\\"[0-9]+\\"]'
p2 = "\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+]"
# entities  = c("ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
#               "Schools","Universities","Play schools",
#               "Pharmacy","Surgical Store",
#               "Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
#               "Sampoorna Super Market","Reliance Digital","reliance footprint",
#               "max fashion","pantaloons",'shoppers stop','reliance trends',
#               'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
#               "KFC","Starbucks Coffee",'subway',)
entities = c("Pharmacy","Surgical Store",
"Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
"Sampoorna Super Market","Reliance Digital","reliance footprint",
"max fashion","pantaloons",'shoppers stop','reliance trends',
'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
"KFC","Starbucks Coffee",'subway',"ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
"Schools","Universities","Play schools")
for (i1 in c(34,6)){
city = cities$city[i1]
state = cities$state[i1]
u0 = cities$link[i1]
page = read_html(u0)
localities = html_text(html_nodes(page,'.footer-locality-list .cf-tracking-enabled'))
# pattern = "\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+]"
for (entity in entities){
# loc_details = NULL
df = data.frame(NULL)
i = 0
for (l in localities){
query = gsub(" ","+",paste(entity,'in',l,city,state,country))
url = paste0('https://www.google.co.in/maps/search/',query,'/data=!3m1!4b1')
page = readLines(url)
# download.file(url,'maps.html',quiet = T)
# page = readLines('maps.html')
# loc_detailsp = unlist(str_extract_all(page,pattern))
# rep = gsub("\\s+cacheResponse\\(|);","",page[11])
# dpoints = unlist(strsplit(rep,'\\[\\[\\"0x3'))
items = unlist(str_extract_all(page,p1))
for (item in items){
Addr = gsub('\\"','',gsub('\\[\\[\\".*?\\",|,\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+],\\"[0-9]+\\"]',"",item))
loc = unlist(str_extract_all(item, p2))
dft = data.frame(Addr,loc, stringsAsFactors = F)
df = rbind(df,dft)
}
i = i+1
print(i)
}
loc_details = unique(df)
write.csv(df,paste0(entity,' in ',city,'.csv'))
print(paste0(entity,' in ',city))
}
Sys.sleep(10)
print(cities[i1,])
}
# 1:54PM 22/05/2018
rm(list=ls())
library(stringr)
library(rvest)
# bangalore	karnataka	https://www.commonfloor.com/bangalore-city
# mumbai	Maharashtra	https://www.commonfloor.com/mumbai-city
# delhi	Delhi	https://www.commonfloor.com/delhi-city
# hyderabad	Telengana	https://www.commonfloor.com/hyderabad-city
# chennai	Tamil Nadu	https://www.commonfloor.com/chennai-city
# kolkata	West Bengal	https://www.commonfloor.com/kolkata-city
# mohali	Punjab	https://www.commonfloor.com/mohali-city
# jaipur	Rajasthan	https://www.commonfloor.com/jaipur-city
# gurgaon	Haryana	https://www.commonfloor.com/gurgaon-city
# pune	Maharashtra	https://www.commonfloor.com/pune-city
# noida	Uttar Pradesh	https://www.commonfloor.com/noida-city
# lucknow	Uttar Pradesh	https://www.commonfloor.com/lucknow-city
# patna	Bihar	https://www.commonfloor.com/patna-city
# chandigarh		https://www.commonfloor.com/chandigarh-city
# raipur	Chhattisgarh	https://www.commonfloor.com/raipur-city
# goa	goa	https://www.commonfloor.com/goa-city
# ahmedabad	Gujarat	https://www.commonfloor.com/ahmedabad-city
# shimla	Himachal Pradesh	https://www.commonfloor.com/shimla-city
# jammu	Jammu and Kashmir	https://www.commonfloor.com/jammu-city
# ranchi	Jharkhand	https://www.commonfloor.com/ranchi-city
# trivandrum	Kerala	https://www.commonfloor.com/trivandrum-city
# bhopal	Madhya Pradesh	https://www.commonfloor.com/bhopal-city
# Bhubaneswar	Odisha	https://www.commonfloor.com/Bhubaneswar-city
# Dehradun	Uttarakhand	https://www.commonfloor.com/Dehradun-city
# Visakhapatnam	Andhra Pradesh	https://www.commonfloor.com/Visakhapatnam-city
# surat	Gujarat	https://www.commonfloor.com/surat-city
# rajkot	Gujarat	https://www.commonfloor.com/rajkot-city
# nashik	Maharashtra	https://www.commonfloor.com/nashik-city
# nagpur	Maharashtra	https://www.commonfloor.com/nagpur-city
# Coimbatore	Tamil Nadu	https://www.commonfloor.com/Coimbatore-city
# mysore	karnataka	https://www.commonfloor.com/mysore-city
# Kochi	Kerala	https://www.commonfloor.com/Kochi-city
# Jamshedpur	Jharkhand	https://www.commonfloor.com/Jamshedpur-city
cities = read.csv('D:\\maps_shiny\\cities.csv', header=T, stringsAsFactors = F)
# colnames(cities) = c('city','state','link')
country = 'India'
p1 = '\\[\\[\\"0.*?\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+],\\"[0-9]+\\"]'
p2 = "\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+]"
# entities  = c("ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
#               "Schools","Universities","Play schools",
#               "Pharmacy","Surgical Store",
#               "Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
#               "Sampoorna Super Market","Reliance Digital","reliance footprint",
#               "max fashion","pantaloons",'shoppers stop','reliance trends',
#               'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
#               "KFC","Starbucks Coffee",'subway',)
entities = c("Pharmacy","Surgical Store",
"Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
"Sampoorna Super Market","Reliance Digital","reliance footprint",
"max fashion","pantaloons",'shoppers stop','reliance trends',
'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
"KFC","Starbucks Coffee",'subway',"ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
"Schools","Universities","Play schools")
for (i1 in c(34,6)){
city = cities$city[i1]
state = cities$state[i1]
u0 = cities$link[i1]
page = read_html(u0)
localities = html_text(html_nodes(page,'.footer-locality-list .cf-tracking-enabled'))
# pattern = "\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+]"
for (entity in entities){
# loc_details = NULL
df = data.frame(NULL)
i = 0
for (l in localities){
query = gsub(" ","+",paste(entity,'in',l,city,state,country))
url = paste0('https://www.google.co.in/maps/search/',query,'/data=!3m1!4b1')
page = readLines(url)
# download.file(url,'maps.html',quiet = T)
# page = readLines('maps.html')
# loc_detailsp = unlist(str_extract_all(page,pattern))
# rep = gsub("\\s+cacheResponse\\(|);","",page[11])
# dpoints = unlist(strsplit(rep,'\\[\\[\\"0x3'))
items = unlist(str_extract_all(page,p1))
for (item in items){
Addr = gsub('\\"','',gsub('\\[\\[\\".*?\\",|,\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+],\\"[0-9]+\\"]',"",item))
loc = unlist(str_extract_all(item, p2))
dft = data.frame(Addr,loc, stringsAsFactors = F)
df = rbind(df,dft)
}
i = i+1
print(i)
}
loc_details = unique(df)
write.csv(df,paste0(entity,' in ',city,'.csv'))
print(paste0(entity,' in ',city))
}
Sys.sleep(10)
print(cities[i1,])
}
# 1:54PM 22/05/2018
rm(list=ls())
library(stringr)
library(rvest)
# bangalore	karnataka	https://www.commonfloor.com/bangalore-city
# mumbai	Maharashtra	https://www.commonfloor.com/mumbai-city
# delhi	Delhi	https://www.commonfloor.com/delhi-city
# hyderabad	Telengana	https://www.commonfloor.com/hyderabad-city
# chennai	Tamil Nadu	https://www.commonfloor.com/chennai-city
# kolkata	West Bengal	https://www.commonfloor.com/kolkata-city
# mohali	Punjab	https://www.commonfloor.com/mohali-city
# jaipur	Rajasthan	https://www.commonfloor.com/jaipur-city
# gurgaon	Haryana	https://www.commonfloor.com/gurgaon-city
# pune	Maharashtra	https://www.commonfloor.com/pune-city
# noida	Uttar Pradesh	https://www.commonfloor.com/noida-city
# lucknow	Uttar Pradesh	https://www.commonfloor.com/lucknow-city
# patna	Bihar	https://www.commonfloor.com/patna-city
# chandigarh		https://www.commonfloor.com/chandigarh-city
# raipur	Chhattisgarh	https://www.commonfloor.com/raipur-city
# goa	goa	https://www.commonfloor.com/goa-city
# ahmedabad	Gujarat	https://www.commonfloor.com/ahmedabad-city
# shimla	Himachal Pradesh	https://www.commonfloor.com/shimla-city
# jammu	Jammu and Kashmir	https://www.commonfloor.com/jammu-city
# ranchi	Jharkhand	https://www.commonfloor.com/ranchi-city
# trivandrum	Kerala	https://www.commonfloor.com/trivandrum-city
# bhopal	Madhya Pradesh	https://www.commonfloor.com/bhopal-city
# Bhubaneswar	Odisha	https://www.commonfloor.com/Bhubaneswar-city
# Dehradun	Uttarakhand	https://www.commonfloor.com/Dehradun-city
# Visakhapatnam	Andhra Pradesh	https://www.commonfloor.com/Visakhapatnam-city
# surat	Gujarat	https://www.commonfloor.com/surat-city
# rajkot	Gujarat	https://www.commonfloor.com/rajkot-city
# nashik	Maharashtra	https://www.commonfloor.com/nashik-city
# nagpur	Maharashtra	https://www.commonfloor.com/nagpur-city
# Coimbatore	Tamil Nadu	https://www.commonfloor.com/Coimbatore-city
# mysore	karnataka	https://www.commonfloor.com/mysore-city
# Kochi	Kerala	https://www.commonfloor.com/Kochi-city
# Jamshedpur	Jharkhand	https://www.commonfloor.com/Jamshedpur-city
cities = read.csv('D:\\maps_shiny\\cities.csv', header=T, stringsAsFactors = F)
# colnames(cities) = c('city','state','link')
country = 'India'
p1 = '\\[\\[\\"0.*?\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+],\\"[0-9]+\\"]'
p2 = "\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+]"
# entities  = c("ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
#               "Schools","Universities","Play schools",
#               "Pharmacy","Surgical Store",
#               "Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
#               "Sampoorna Super Market","Reliance Digital","reliance footprint",
#               "max fashion","pantaloons",'shoppers stop','reliance trends',
#               'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
#               "KFC","Starbucks Coffee",'subway',)
entities = c("Pharmacy","Surgical Store",
"Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
"Sampoorna Super Market","Reliance Digital","reliance footprint",
"max fashion","pantaloons",'shoppers stop','reliance trends',
'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
"KFC","Starbucks Coffee",'subway',"ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
"Schools","Universities","Play schools")
# 1:54PM 22/05/2018
rm(list=ls())
library(stringr)
library(rvest)
# bangalore	karnataka	https://www.commonfloor.com/bangalore-city
# mumbai	Maharashtra	https://www.commonfloor.com/mumbai-city
# delhi	Delhi	https://www.commonfloor.com/delhi-city
# hyderabad	Telengana	https://www.commonfloor.com/hyderabad-city
# chennai	Tamil Nadu	https://www.commonfloor.com/chennai-city
# kolkata	West Bengal	https://www.commonfloor.com/kolkata-city
# mohali	Punjab	https://www.commonfloor.com/mohali-city
# jaipur	Rajasthan	https://www.commonfloor.com/jaipur-city
# gurgaon	Haryana	https://www.commonfloor.com/gurgaon-city
# pune	Maharashtra	https://www.commonfloor.com/pune-city
# noida	Uttar Pradesh	https://www.commonfloor.com/noida-city
# lucknow	Uttar Pradesh	https://www.commonfloor.com/lucknow-city
# patna	Bihar	https://www.commonfloor.com/patna-city
# chandigarh		https://www.commonfloor.com/chandigarh-city
# raipur	Chhattisgarh	https://www.commonfloor.com/raipur-city
# goa	goa	https://www.commonfloor.com/goa-city
# ahmedabad	Gujarat	https://www.commonfloor.com/ahmedabad-city
# shimla	Himachal Pradesh	https://www.commonfloor.com/shimla-city
# jammu	Jammu and Kashmir	https://www.commonfloor.com/jammu-city
# ranchi	Jharkhand	https://www.commonfloor.com/ranchi-city
# trivandrum	Kerala	https://www.commonfloor.com/trivandrum-city
# bhopal	Madhya Pradesh	https://www.commonfloor.com/bhopal-city
# Bhubaneswar	Odisha	https://www.commonfloor.com/Bhubaneswar-city
# Dehradun	Uttarakhand	https://www.commonfloor.com/Dehradun-city
# Visakhapatnam	Andhra Pradesh	https://www.commonfloor.com/Visakhapatnam-city
# surat	Gujarat	https://www.commonfloor.com/surat-city
# rajkot	Gujarat	https://www.commonfloor.com/rajkot-city
# nashik	Maharashtra	https://www.commonfloor.com/nashik-city
# nagpur	Maharashtra	https://www.commonfloor.com/nagpur-city
# Coimbatore	Tamil Nadu	https://www.commonfloor.com/Coimbatore-city
# mysore	karnataka	https://www.commonfloor.com/mysore-city
# Kochi	Kerala	https://www.commonfloor.com/Kochi-city
# Jamshedpur	Jharkhand	https://www.commonfloor.com/Jamshedpur-city
cities = read.csv('D:\\maps_shiny\\cities.csv', header=T, stringsAsFactors = F)
# colnames(cities) = c('city','state','link')
country = 'India'
p1 = '\\[\\[\\"0.*?\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+],\\"[0-9]+\\"]'
p2 = "\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+]"
# entities  = c("ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
#               "Schools","Universities","Play schools",
#               "Pharmacy","Surgical Store",
#               "Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
#               "Sampoorna Super Market","Reliance Digital","reliance footprint",
#               "max fashion","pantaloons",'shoppers stop','reliance trends',
#               'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
#               "KFC","Starbucks Coffee",'subway',)
entities = c("Pharmacy","Surgical Store",
"Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
"Sampoorna Super Market","Reliance Digital","reliance footprint",
"max fashion","pantaloons",'shoppers stop','reliance trends',
'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
"KFC","Starbucks Coffee",'subway',"ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
"Schools","Universities","Play schools")
i1
i1 = 34
city = cities$city[i1]
state = cities$state[i1]
city
state
u0 = cities$link[i1]
page = read_html(u0)
u0
library(rvest)
page = read_html(u0)
u0
u0 = cities$link[i1]
u0
cities
city = cities$city[i1]
state = cities$state[i1]
u0 = cities$cf_link[i1]
city
state
u0 = cities$cf_link[i1]
page = read_html(u0)
localities = html_text(html_nodes(page,'.footer-locality-list .cf-tracking-enabled'))
# 1:54PM 22/05/2018
rm(list=ls())
library(stringr)
library(rvest)
# bangalore	karnataka	https://www.commonfloor.com/bangalore-city
# mumbai	Maharashtra	https://www.commonfloor.com/mumbai-city
# delhi	Delhi	https://www.commonfloor.com/delhi-city
# hyderabad	Telengana	https://www.commonfloor.com/hyderabad-city
# chennai	Tamil Nadu	https://www.commonfloor.com/chennai-city
# kolkata	West Bengal	https://www.commonfloor.com/kolkata-city
# mohali	Punjab	https://www.commonfloor.com/mohali-city
# jaipur	Rajasthan	https://www.commonfloor.com/jaipur-city
# gurgaon	Haryana	https://www.commonfloor.com/gurgaon-city
# pune	Maharashtra	https://www.commonfloor.com/pune-city
# noida	Uttar Pradesh	https://www.commonfloor.com/noida-city
# lucknow	Uttar Pradesh	https://www.commonfloor.com/lucknow-city
# patna	Bihar	https://www.commonfloor.com/patna-city
# chandigarh		https://www.commonfloor.com/chandigarh-city
# raipur	Chhattisgarh	https://www.commonfloor.com/raipur-city
# goa	goa	https://www.commonfloor.com/goa-city
# ahmedabad	Gujarat	https://www.commonfloor.com/ahmedabad-city
# shimla	Himachal Pradesh	https://www.commonfloor.com/shimla-city
# jammu	Jammu and Kashmir	https://www.commonfloor.com/jammu-city
# ranchi	Jharkhand	https://www.commonfloor.com/ranchi-city
# trivandrum	Kerala	https://www.commonfloor.com/trivandrum-city
# bhopal	Madhya Pradesh	https://www.commonfloor.com/bhopal-city
# Bhubaneswar	Odisha	https://www.commonfloor.com/Bhubaneswar-city
# Dehradun	Uttarakhand	https://www.commonfloor.com/Dehradun-city
# Visakhapatnam	Andhra Pradesh	https://www.commonfloor.com/Visakhapatnam-city
# surat	Gujarat	https://www.commonfloor.com/surat-city
# rajkot	Gujarat	https://www.commonfloor.com/rajkot-city
# nashik	Maharashtra	https://www.commonfloor.com/nashik-city
# nagpur	Maharashtra	https://www.commonfloor.com/nagpur-city
# Coimbatore	Tamil Nadu	https://www.commonfloor.com/Coimbatore-city
# mysore	karnataka	https://www.commonfloor.com/mysore-city
# Kochi	Kerala	https://www.commonfloor.com/Kochi-city
# Jamshedpur	Jharkhand	https://www.commonfloor.com/Jamshedpur-city
cities = read.csv('D:\\maps_shiny\\cities.csv', header=T, stringsAsFactors = F)
# colnames(cities) = c('city','state','link')
country = 'India'
p1 = '\\[\\[\\"0.*?\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+],\\"[0-9]+\\"]'
p2 = "\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+]"
# entities  = c("ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
#               "Schools","Universities","Play schools",
#               "Pharmacy","Surgical Store",
#               "Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
#               "Sampoorna Super Market","Reliance Digital","reliance footprint",
#               "max fashion","pantaloons",'shoppers stop','reliance trends',
#               'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
#               "KFC","Starbucks Coffee",'subway',)
entities = c("Pharmacy","Surgical Store",
"Reliance Fresh","Ratnadeep Super Market","Ghanshyam Super Market","More Super Market",
"Sampoorna Super Market","Reliance Digital","reliance footprint",
"max fashion","pantaloons",'shoppers stop','reliance trends',
'Cafe Coffee Day',"McDonald's","domino's pizza","Pizza hut",
"KFC","Starbucks Coffee",'subway',"ATM","Bank","Shopping Mall","Restaurants","Hospitals",'Hotels',
"Schools","Universities","Play schools")
for (i1 in c(34,6)){
city = cities$city[i1]
state = cities$state[i1]
u0 = cities$cf_link[i1]
page = read_html(u0)
localities = html_text(html_nodes(page,'.footer-locality-list .cf-tracking-enabled'))
# pattern = "\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+]"
for (entity in entities){
# loc_details = NULL
df = data.frame(NULL)
i = 0
for (l in localities){
query = gsub(" ","+",paste(entity,'in',l,city,state,country))
url = paste0('https://www.google.co.in/maps/search/',query,'/data=!3m1!4b1')
page = readLines(url)
# download.file(url,'maps.html',quiet = T)
# page = readLines('maps.html')
# loc_detailsp = unlist(str_extract_all(page,pattern))
# rep = gsub("\\s+cacheResponse\\(|);","",page[11])
# dpoints = unlist(strsplit(rep,'\\[\\[\\"0x3'))
items = unlist(str_extract_all(page,p1))
for (item in items){
Addr = gsub('\\"','',gsub('\\[\\[\\".*?\\",|,\\[-?[0-9]+\\.[0-9]+,-?[0-9]+\\.[0-9]+],\\"[0-9]+\\"]',"",item))
loc = unlist(str_extract_all(item, p2))
dft = data.frame(Addr,loc, stringsAsFactors = F)
df = rbind(df,dft)
}
i = i+1
print(i)
}
loc_details = unique(df)
write.csv(df,paste0(entity,' in ',city,'.csv'))
print(paste0(entity,' in ',city))
}
Sys.sleep(10)
print(cities[i1,])
}
rm(list = ls())
library(leaflet)
library(geosphere)
library(data.table)
setwd('D:\\maps_shiny\\data')
#-----------------------------#
loc_data = data.table(readRDS('All_data_app.Rds'))
e_dt = read.csv('Entities_mapping.csv', stringsAsFactors = F)
head(loc_data);head(e_dt)
loc_sub = loc_data[loc_data$e_key %in% c(8:29) & loc_data$city_id == 4,1:3]
loc_sub = merge(loc_sub,e_dt, by = 'e_key')
api="https://maps.googleapis.com/maps/api/js?key=AIzaSyBk1iNGBRPz1DQuKwtKzSwRFHckK996YPw"
loc_sub = loc_data[loc_data$e_key %in% c(15:29) & loc_data$city_id == 4,1:3]
loc_sub = merge(loc_sub,e_dt, by = 'e_key')
loc_sub$id = 1:nrow(loc_sub)
loc_dt <- expand.grid.df(loc_sub,loc_sub)
names(loc_dt)[4:5] <- c("latitude_dest","longitude_dest")
head(loc_dt)
library(reshape)
loc_sub$id = 1:nrow(loc_sub)
loc_dt <- expand.grid.df(loc_sub,loc_sub)
names(loc_dt)[4:5] <- c("latitude_dest","longitude_dest")
head(loc_dt)
dim(loc_dt)
# calculate distances in meters:
setDT(loc_dt)[ , dist_km := distGeo(matrix(c(longitude, latitude), ncol = 2),
matrix(c(longitude_dest, latitude_dest), ncol = 2))/1000]
distm = matrix(loc_dt$dist_km,sqrt(nrow(loc_dt)),sqrt(nrow(loc_dt)))
rownames(distm) = loc_sub$id
colnames(distm) = loc_sub$id
504*504
loc_sub = loc_sub[1:4,]
loc_sub
loc_dt <- expand.grid.df(loc_sub,loc_sub)
loc_dt
distm = matrix(loc_dt$dist_km,sqrt(nrow(loc_dt)),sqrt(nrow(loc_dt)))
# calculate distances in meters:
setDT(loc_dt)[ , dist_km := distGeo(matrix(c(longitude, latitude), ncol = 2),
matrix(c(longitude_dest, latitude_dest), ncol = 2))/1000]
loc_dt <- expand.grid.df(loc_sub,loc_sub)
loc_sub$id = 1:nrow(loc_sub)
loc_dt <- expand.grid.df(loc_sub,loc_sub)
names(loc_dt)
names(loc_dt)[9:10] <- c("latitude_dest","longitude_dest")
head(loc_dt)
# calculate distances in meters:
setDT(loc_dt)[ , dist_km := distGeo(matrix(c(longitude, latitude), ncol = 2),
matrix(c(longitude_dest, latitude_dest), ncol = 2))/1000]
distm = matrix(loc_dt$dist_km,sqrt(nrow(loc_dt)),sqrt(nrow(loc_dt)))
rownames(distm) = loc_sub$id
colnames(distm) = loc_sub$id
distm
#
# Create clusters based in distances
fit <- hclust(as.dist(distm), method="ward")
plot(fit) # display dendogram
#
groups <- cutree(fit, k=4) # cut tree into 18 clusters
# # draw dendogram with red borders around the 18 clusters
rect.hclust(fit, k=18, border="red")
# # draw dendogram with red borders around the 18 clusters
rect.hclust(fit, k=4, border="red")
# # draw dendogram with red borders around the 18 clusters
rect.hclust(fit, k=3, border="red")
loc_sub = loc_data[loc_data$e_key %in% c(15:29) & loc_data$city_id == 4,1:3]
loc_sub = merge(loc_sub,e_dt, by = 'e_key')
loc_sub = loc_sub[1:50,]
loc_sub$id = 1:nrow(loc_sub)
loc_dt <- expand.grid.df(loc_sub,loc_sub)
names(loc_dt)[9:10] <- c("latitude_dest","longitude_dest")
head(loc_dt)
# calculate distances in meters:
setDT(loc_dt)[ , dist_km := distGeo(matrix(c(longitude, latitude), ncol = 2),
matrix(c(longitude_dest, latitude_dest), ncol = 2))/1000]
distm = matrix(loc_dt$dist_km,sqrt(nrow(loc_dt)),sqrt(nrow(loc_dt)))
rownames(distm) = loc_sub$id
colnames(distm) = loc_sub$id
class(distm)
distm[1:10,1:10]
#
# Create clusters based in distances
fit <- hclust(as.dist(distm), method="ward")
plot(fit) # display dendogram
#
groups <- cutree(fit, k=4) # cut tree into 18 clusters
#
groups <- cutree(fit, k=10) # cut tree into 18 clusters
groups <- cutree(fit, k=10) # cut tree into 18 clusters
# # draw dendogram with red borders around the 18 clusters
rect.hclust(fit, k=10, border="red")
loc_sub$group = groups # Assign cluster groups
# # Plot stores with clustor as label
sample$group = groups # Assign cluster groups
sample = loc_sub
# # Plot stores with clustor as label
sample$group = groups # Assign cluster groups
# Plot stores with clustor as label
m <- mcGoogleMaps(sample, mapTypeId='ROADMAP', zcol="group")
library(plotGoogleMaps)
# Plot stores with clustor as label
m <- mcGoogleMaps(sample, mapTypeId='ROADMAP', zcol="group")
coordinates(sample) <-~ longitude +latitude # Create cordinates
proj4string(sample) = CRS('+proj=longlat +datum=WGS84') # Add Projections
# # Plot stores with clustor as label
sample$group = groups # Assign cluster groups
# Plot stores with clustor as label
m <- mcGoogleMaps(sample, mapTypeId='ROADMAP', zcol="group")
api="https://maps.googleapis.com/maps/api/js?key=AIzaSyBk1iNGBRPz1DQuKwtKzSwRFHckK996YPw"
# Plot stores with clustor as label
m <- mcGoogleMaps(sample, mapTypeId='ROADMAP', zcol="group", api = api)
shiny::runApp('D:/maps_shiny')
